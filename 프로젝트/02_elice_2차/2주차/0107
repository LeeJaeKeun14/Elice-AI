마무리

- 스크럼...
- feature -> string 
  - VM에서 시연, 에러 찾기

- 발표준비...

- 백엔드
  - 도커 이미지 -> 프로젝트 구조


elice-kdt-3rd-team-01.koreacentral.cloudapp.azure.com

데이터 분석
문제점 & 해결방안

- 문제점

약 2만개의 영화의 cosine_similarity 매트릭스(20000*20000)의 
모델의 크기가 약2.7G 라는 규모로 만들어져 서버에서 동작하지 않은
문제가 발생.

- 해결방안

추천 알고리즘에 2만등까지 유사한 영화 정보가 사용되지 않음으로,
알고리즘에 필요한 60등까지의 순위만 파일로 저장. 
이를 DB에서 가져와 바로 추천하는 방법으로 효율적으로 모델을 구성.


처음으로 다른 포지션의 팀원과 프로젝트를 진행하며 <b> 다른 포지션과의 
의사소통 방법을 많이 배웠습니다.</b> 같은 데이터 분석 포지션이면 
설명에 생략하는 부분이 있거나 상대 설명을 쉽게 이해하고 넘어가지만,
다른 포지션 설명은 보다 집중하며, 부족하면 다시 설명을 부탁하고,
데이터 분석 설명을 보다 쉽게 이해할 수 있도록 의사소통에 노력한 것 
같습니다.



***

안녕하십니까. 1팀 발표를 맡은 발표자 이재근입니다.
지금부터 기가막힌 블랙피자 서비스를 소개하도록 하겠습니다.

저희 블랙피자 서비스의 발표 순서는 
 - 팀 소개
 - 웹 서비스 시현
 - 프로젝트 설명 
 - 문제점 & 해결방안 배운점
 - 마지막으로 QnA 순서로 진행하겠습니다.


- 블랙 피자.
- 굉장히 심오한 의미를 담고있는 저희 팀 명은...

  - 이름의 유래에 대한 놀라운 이유를 알고 있으나
  - 시간이 부족해서 여기서 설명하지 않겠습니다.

    - 궁굼하시면 QnA시간에 알려 드리겠습니다.

1. 다음으로 저희 훌륭한 팀원소개 입니다.
  - ()지금 발표를 하고있는 (팀장, 데이터 분석 포지션) 이재근 입니다
    - 주로 담당한 업무는 추천 알고리즘 구현
  - ()시각화면 시각화, 데이터 수집이면 수집, 분석이면 분석 만능 (데이터분석)가 전현호 : 
  - ()웹 서비스의 전반적인 구축을 담당해주시고, 
    오류 발생시 어떤것이든 해결해주는 팀의 기둥 (백엔드)이무원 : 

  - ()프로젝트 기획, api통신, 문서화 등 
    피드백 시 언제나 필요한 기능을 구연해주신 만능 지니 (백엔드)장서우 : 
  마지막으로
  - ()혼자서 모든 프론트를 담당해준, 저희 프로젝트의 없으면 안되는 
    필요조건! (프론트엔드)김현하

이처럼 훌륭한 팀원들이 만든
서비스 라이브 시연을
시작하도록 하겠습니다.


2. 라이브데모
  - 서비스의 시작 페이지는 
    검색기능, 
    인기영화 추천기능,
    로그인, 가입하기, 서비스 소개 네비게이션 바가 있습니다.

  - 먼저 서비스 소개를 진행 하도록 하겠습니다.
    - 저희 서비스는
    - OTT 플랫폼과 영화를 추천해주는 웹 서비스를 제공합니다.
    
    - 이러한 서비스를 시작하게된 이유는
    - 코로나19 시대의 장기화가 있습니다.

    - 코로나 확진자의 수는 지금까지 지속적으로 증가는 추세이고,
    - 이로인한 사회적 거리두기가 강화되어 
      저희는 점점 외부활동이 제한되기 시작했습니다.

    - 언택트(Untact) 시대가 가져온 미디어 콘텐츠 이용 방식의 변화

    - 코로나 이전 영화를 즐기기 위한 방법으로 영화관에 가는 방법이 있었지만,
    - 코로나 이후 영화관의 가는 사람은 줄어들고, OTT 서비스를 이용하는 사람의
    수가 증가하고 있습니다.

    - 따라서 OTT사용자 수가 증가하였고,
    - 다양해진 OTT 플랫폼 사이에서 나에게 딱 맞는 플랫폼을
    - 찾는 사람또한 증가하였습니다

    - 이러한 사람들!
    - 보고싶은 영화를 고르고
    - 나만의 맞춤 OTT와 영화를
    - 찾는 사람들을 위한 솔루션을 준비하였습니다.

- 저희의 솔루션은 회원가입을 기능통해 유저별로 제공해 드립니다.
- 회원가입
  - test@naver.com
  - 123456789ㅁ
- 로그인
회원가입은 생략하도록 하겠습니다.

- 다음으로 마이페이지 기능을 소개하겠습니다.
- 영화를 찜하기 기능을 통해 마이페이지에 추가할 수 있으며, 취소할 수 있습니다.

- 다음으로 검색 기능입니다.
  - 스파이더맨
  - 검색을 할 수 있고,
  - 제목, 감독, 배우 기준으로 검색 기능도 제공합니다.

- 추천하기
  - 각 장르, 시대 기준으로 평가 기준을 설정할 수 있습니다.
    - 코미디, 애니메이션, 2010, 2020

- Web API의  
    인터섹션옵저버 API와
  리엑트 query의 
    유즈 인피니티 쿼리를 사용하여
  infinite scroll을 구현하였습니다. 

  이는 데이터를 필요한 만큼 나누어 받아 
  사용자가 화면을 볼 때 지연되지 않게 서비스 제공 합니다.. 

- 또한 사용자가 평가 할 때 
  어느정도 선택을 했는지 진행과정을 알 수 있도록 
  progress bar 와 button의 ui를 구현하였습니다. 

- 별점을 구현할 때에는 단순히 css의 hover를 사용하는 것이 아니라 
- 세가지 web api를 사용하여 
  별점 선택, 변경, 취소기능을 구현하였습니다. 


- 추천 
  - 추천 알고리즘 결과입니다.
    - 고객의 평가를 기반으로 영화를 추천하며, 
      이에 관하여 가장 많이 제공받을 수 있는 OTT를 추천해줍니다.
      - 또한 마이페이지의 찜하기 기능을 통햐여 추천을 받을 수 있습니다.

      저희 서비스는, 항상 같은 결과를 추천해주는 것이 아닙니다.,
    - 동일한 평가여도, 동일한 찜하기여도 
      다양한 추천을 제공할 수 있는 알고리즘을 구현하였습니다.

    - 일반적인 랜덤하게 제공하는 것이 아닌, 
      각 영화별 유사한 영화, 
      공통적 유사한 영화, 
      랜덤한 유사한 영화들을 추천하여 
      고객들에게 풍부하고 다양한 경험을 제공할 수 있습니다.

다음으로 이런 기가막힌 서비스의 
세부 내용을 설명드리도록 하겠습니다

- 프로젝트 소개
  - 저희가 이러한 서비스를 기획한 이유는
    1. 코로나 19의 장기화
    2. OTT 서비스 사용자의 증가
    3. 다양한 OTT 플랫폼의 등장

  - ppt 읽기

저희 프로젝트 진행 과정 설명입니다.

- 제목 읽기
  - gitlab 진행

- 저희 블랙피자는 

  매일 오전 10시 스크럼을 진행 하였고
  총 4번의 스프린트 단위로 프로젝트를 진행하였습니다.

...

저희의 피. 땀. 눈물  쏟은
프로젝트 기능 설명입니다.

먼저 프론트엔드 입니다.

- 커스텀 훅.

- 저희는 데이터 통신과 관련된 코드들을 다음과 같은 구조로
  분리하여 코드를 작성하였습니다.

   커스텀 훅을 만들어 컴포넌트와 api사용을 분리하여
   - 컴포넌트에서는 ui와 관련된 코드
     커스텀 훅에서는 데이터 패치에 관련된 코드에 집중 할 수 있었습니다.

- 스태이트 매니지 먼트

- 서버 데이터를 다루기 위한 상태관리 라이브러리 React query를 사용하여
    복잡한 비동기 관련 로직들을 관리 하였으며.

- 추가적으로 상태관리 라이브러리로 Recoil을 사용하였습니다.
  redux에 비해 단순한 인터페이스의 사용으로
  보다 간편하게 state를 전역상태로 관리할 수 있었고.

    페이지 전환 시 전달해주어야 할 데이터와
    login 상태 같은 전역데이터를

    recoil을 이용하여 간단하게 관리할 수 있었습니다. 


백엔드 기능 설명입니다.

- 저희 프로젝트는 도커를 기반으로 구현하였습니다.
  - 저희 프로젝트 팀원들이 맥, 윈도우 사용자로 나누어져 있으며, 
  - VM에서 리눅스 환경에서 서비스를 해야하므로 
    환경차이로 인한 오류 방지 할 수 있는
  - 도커를 사용하여 배포를 하였습니다.

- 저희 서비스는
    - 파이선 기반 플라스크
    - 노드js 기반 react
    - mysql 기반 DB
    - 이미지를 관리할 수 있는 nginx 기반 썸네일 서버 로 이루어져 있습니다.

- docker compose 를 사용하여 이 모든 서버들이 통신할 수 있는
  자체 네크워크 구축하여고,
  - 웹 서버를 프록시 서버로 설정을 하여
  클라이언트는 웹서버를 통하여서만 통신을 할수 있도록 하였습니다.

- API 통신입니다.
  ...

- 다음으로 저희 서비스의 꽃
  추천 서비스 알고리즘 설명 드리겠습니다.

- 데이터 수집부터
- 영화 추천까지 워크플로우를 설명 드리겠습니다.

마지막으로 저희의 기가막힌 서비스의 궁굼하신 점이 있으시면
얼마든지 질문 해주시길 바랍니다.




3. 프로젝트 주요기능
 3.1. 프로젝트 팀 규칙 등 진행 방법
 3.2. 프로젝트 진행 일정
 3.4. 주요기능
 3.5. 추천 알고리즘 설명(data)

4. 어려웠던점 & 배운점 - 각자 한마디씩 



- 팀원 소개
  - 팁 : 세부 포지션으로 역활 분담...

- 프로젝트 주요 기능
  - 프론트
    - 무한 페이지
  - 백앤드
    - 도커(DB, flask, react, ...)
    - api 구조
  - 데이터분석
    - 추천 알고리즘

- 서비스 소개
  - 검정피자...
  - OTT 추천 서비스
    - 코로나 분석 이미지...

- 라이브 데모
  - 오류 없어라

- 어려웠던 점
  - 

- 배운 점
  - 다른 포지션간 의견 조율



***

- 서비스 기획

- 서비스 기능 기획

- 필수 기능 구현

- 추가 기능 구현
  - 

- 유지보수(코드스타일)
  - 데이터 분석(크콜링, 전처리, 추천 알고리즘 코드 공유)

- 유지보수(문서화)
  - api 명세서 문제 없고,
  - readme 수정
  - 스토리보드...
  - 와이어프레임 추가 부탁

- 유효성

- 직관성

- 논리성

- 목적성
  - 유저 플로우(장르선택 후 추천 버튼 위치 변경)



***

- 발표
  - 서비스 이해
  - 가시성
  - 유효성